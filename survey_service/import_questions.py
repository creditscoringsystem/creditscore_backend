import pandas as pd
import ast
from sqlalchemy.orm import Session
from database import QuestionsSessionLocal
from models.survey import SurveyQuestion

def import_questions_from_csv(csv_file_path: str):
    """Import c√¢u h·ªèi t·ª´ file CSV v√†o database"""
    try:
        # ƒê·ªçc file CSV
        df = pd.read_csv(csv_file_path)
        print(f"üìñ ƒê·ªçc ƒë∆∞·ª£c {len(df)} c√¢u h·ªèi t·ª´ file CSV")
        
        # T·∫°o session database
        db = QuestionsSessionLocal()
        
        # X√≥a t·∫•t c·∫£ c√¢u h·ªèi c≈© (n·∫øu c√≥)
        db.query(SurveyQuestion).delete()
        db.commit()
        print("üóëÔ∏è ƒê√£ x√≥a d·ªØ li·ªáu c≈©")
        
        # Import t·ª´ng c√¢u h·ªèi
        for index, row in df.iterrows():
            try:
                # X·ª≠ l√Ω options (chuy·ªÉn t·ª´ string sang list)
                options = None
                if pd.notna(row['options']) and row['options']:
                    try:
                        options = ast.literal_eval(row['options'])
                    except:
                        options = row['options'].split(',') if ',' in row['options'] else [row['options']]
                
                # T·∫°o c√¢u h·ªèi m·ªõi
                question = SurveyQuestion(
                    question_text=row['question_text'],
                    question_type=row['question_type'],
                    question_group=row['question_group'],
                    options=options,
                    order=int(row['order']),
                    is_required=int(row['is_required']),
                    version=int(row['version'])
                )
                
                db.add(question)
                print(f"‚úÖ ƒê√£ th√™m c√¢u h·ªèi {index + 1}: {row['question_text'][:50]}...")
                
            except Exception as e:
                print(f"‚ùå L·ªói khi import c√¢u h·ªèi {index + 1}: {e}")
                continue
        
        # Commit t·∫•t c·∫£ thay ƒë·ªïi
        db.commit()
        print(f"üéâ Ho√†n th√†nh import {len(df)} c√¢u h·ªèi v√†o database!")
        
        # ƒê·∫øm s·ªë c√¢u h·ªèi theo nh√≥m
        questions = db.query(SurveyQuestion).all()
        groups = {}
        for q in questions:
            if q.question_group not in groups:
                groups[q.question_group] = 0
            groups[q.question_group] += 1
        
        print("\nüìä Th·ªëng k√™ theo nh√≥m c√¢u h·ªèi:")
        for group, count in groups.items():
            print(f"  - {group}: {count} c√¢u h·ªèi")
        
        db.close()
        return True
        
    except Exception as e:
        print(f"‚ùå L·ªói khi import: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ B·∫Øt ƒë·∫ßu import c√¢u h·ªèi t·ª´ CSV...")
    success = import_questions_from_csv("sample_questions.csv")
    
    if success:
        print("‚úÖ Import th√†nh c√¥ng!")
    else:
        print("‚ùå Import th·∫•t b·∫°i!") 